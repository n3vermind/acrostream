#pragma once

#include <sys/types.h>

typedef struct {
  u_int16_t x;
  u_int16_t y;
  u_int16_t width;
  u_int16_t height;
} mi_sys_window_rect;

typedef struct {
  u_int16_t width;
  u_int16_t height;
} mi_sys_window_size;

typedef enum {
  E_MI_SYS_DATA_PRECISION_8BPP,
  E_MI_SYS_DATA_PRECISION_10BPP,
  E_MI_SYS_DATA_PRECISION_12BPP,
  E_MI_SYS_DATA_PRECISION_14BPP,
  E_MI_SYS_DATA_PRECISION_16BPP,
  E_MI_SYS_DATA_PRECISION_MAX,
} mi_sys_data_precision;

typedef enum {
  E_MI_SYS_PIXEL_BAYERID_RG,
  E_MI_SYS_PIXEL_BAYERID_GR,
  E_MI_SYS_PIXEL_BAYERID_BG,
  E_MI_SYS_PIXEL_BAYERID_GB,
  E_MI_SYS_PIXEL_RGBIR_R0,
  E_MI_SYS_PIXEL_RGBIR_G0,
  E_MI_SYS_PIXEL_RGBIR_B0,
  E_MI_SYS_PIXEL_RGBIR_G1,
  E_MI_SYS_PIXEL_RGBIR_G2,
  E_MI_SYS_PIXEL_RGBIR_I0,
  E_MI_SYS_PIXEL_RGBIR_G3,
  E_MI_SYS_PIXEL_RGBIR_I1,
  E_MI_SYS_PIXEL_BAYERID_MAX,
} mi_sys_bayer_id;

typedef enum {
  E_MI_SYS_FIELDTYPE_NONE,
  E_MI_SYS_FIELDTYPE_TOP,
  E_MI_SYS_FIELDTYPE_BOTTOM,
  E_MI_SYS_FIELDTYPE_BOTH,
  E_MI_SYS_FIELDTYPE_MAX
} mi_sys_field_type;

typedef enum {
  E_MI_SYS_FRAME_SCAN_MODE_PROGRESSIVE,
  E_MI_SYS_FRAME_SCAN_MODE_INTERLACE,
  E_MI_SYS_FRAME_SCAN_MODE_MAX,
} mi_sys_frame_scan_mode;

typedef enum {
  E_MI_SYS_PIXEL_FRAME_YUV422_YUYV = 0,
  E_MI_SYS_PIXEL_FRAME_ARGB8888,
  E_MI_SYS_PIXEL_FRAME_ABGR8888,
  E_MI_SYS_PIXEL_FRAME_BGRA8888,

  E_MI_SYS_PIXEL_FRAME_RGB565,
  E_MI_SYS_PIXEL_FRAME_ARGB1555,
  E_MI_SYS_PIXEL_FRAME_ARGB4444,
  E_MI_SYS_PIXEL_FRAME_I2,
  E_MI_SYS_PIXEL_FRAME_I4,
  E_MI_SYS_PIXEL_FRAME_I8,

  E_MI_SYS_PIXEL_FRAME_YUV_SEMIPLANAR_422,
  E_MI_SYS_PIXEL_FRAME_YUV_SEMIPLANAR_420,
  E_MI_SYS_PIXEL_FRAME_YUV_SEMIPLANAR_420_NV21,
  E_MI_SYS_PIXEL_FRAME_YUV_MST_420,
  E_MI_SYS_PIXEL_FRAME_YUV422_UYVY,
  E_MI_SYS_PIXEL_FRAME_YUV422_YVYU,
  E_MI_SYS_PIXEL_FRAME_YUV422_VYUY,

  E_MI_SYS_PIXEL_FRAME_YC420_MSTTILE1_H264,
  E_MI_SYS_PIXEL_FRAME_YC420_MSTTILE2_H265,
  E_MI_SYS_PIXEL_FRAME_YC420_MSTTILE3_H265,

  E_MI_SYS_PIXEL_FRAME_RGB_BAYER_BASE,
  E_MI_SYS_PIXEL_FRAME_RGB_BAYER_NUM = E_MI_SYS_PIXEL_FRAME_RGB_BAYER_BASE + E_MI_SYS_DATA_PRECISION_MAX*E_MI_SYS_PIXEL_BAYERID_MAX-1,

  E_MI_SYS_PIXEL_FRAME_RGB888,
  E_MI_SYS_PIXEL_FRAME_BGR888,

  E_MI_SYS_PIXEL_FRAME_FORMAT_MAX,
} mi_sys_pixel_format;

typedef enum {
  E_MI_SYS_COMPRESS_MODE_NONE,
  E_MI_SYS_COMPRESS_MODE_SEG,
  E_MI_SYS_COMPRESS_MODE_LINE,
  E_MI_SYS_COMPRESS_MODE_FRAME,
  E_MI_SYS_COMPRESS_MODE_BUTT,
} mi_sys_compress_mode;

typedef enum {
  E_MI_SYS_BIND_TYPE_FRAME_BASE = 0x00000001,
  E_MI_SYS_BIND_TYPE_SW_LOW_LATENCY = 0x00000002,
  E_MI_SYS_BIND_TYPE_REALTIME = 0x00000004,
  E_MI_SYS_BIND_TYPE_HW_AUTOSYNC = 0x00000008,
  E_MI_SYS_BIND_TYPE_HW_RING = 0x00000010,
} mi_sys_bind_type;

typedef enum {
  E_MI_MODULE_ID_IVE,
  E_MI_MODULE_ID_VDF,
  E_MI_MODULE_ID_VENC,
  E_MI_MODULE_ID_RGN,
  E_MI_MODULE_ID_AI,
  E_MI_MODULE_ID_AO,
  E_MI_MODULE_ID_VIF,
  E_MI_MODULE_ID_VPE,
  E_MI_MODULE_ID_VDEC,
  E_MI_MODULE_ID_SYS,
  E_MI_MODULE_ID_FB,
  E_MI_MODULE_ID_HDMI,
  E_MI_MODULE_ID_DIVP,
  E_MI_MODULE_ID_GFX,
  E_MI_MODULE_ID_VDISP,
  E_MI_MODULE_ID_DISP,
  E_MI_MODULE_ID_OS,
  E_MI_MODULE_ID_IAE,
  E_MI_MODULE_ID_MD,
  E_MI_MODULE_ID_OD,
  E_MI_MODULE_ID_SHADOW,
  E_MI_MODULE_ID_WARP,
  E_MI_MODULE_ID_UAC,
  E_MI_MODULE_ID_LDC,
  E_MI_MODULE_ID_SD,
  E_MI_MODULE_ID_PANEL,
  E_MI_MODULE_ID_CIPHER,
  E_MI_MODULE_ID_SNR,
  E_MI_MODULE_ID_WLAN,
  E_MI_MODULE_ID_IPU,
  E_MI_MODULE_ID_MIPITX,
  E_MI_MODULE_ID_MAX,
} mi_sys_module_id;

typedef struct {
  mi_sys_module_id module_id;
  u_int32_t dev_id;
  u_int32_t chn_id;
  u_int32_t port_id;
} mi_sys_chn_port;

typedef struct {
  u_int32_t (*init)(void);
  u_int32_t (*bind_chn_port_2)(mi_sys_chn_port *src_port, mi_sys_chn_port *dst_port, u_int32_t src_framerate, u_int32_t dst_framerate, mi_sys_bind_type bind_type, u_int32_t bind_param);
} mi_sys_impl;
